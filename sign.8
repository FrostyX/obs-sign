.\" man page for sign
.TH sign 8 "Apr 2007"
.SH NAME
sign \- sign files or rpms

.SH SYNOPSIS
.B sign
.RB [ -c | -d | -r | -a ]
.RB [ -u
.IR user ]
.RB [ -h
.IR hash ]
.RI [ file ]
.br
.B sign
.BR -k | -p
.RB [ -u
.IR user ]
.RB [ -h
.IR hash ]
.br
.B sign
.BR -g
.I type
.I expire
.I name 
.I email
.br
.B sign
.BR -x
.I expire
.I pubkey
.br
.B sign
.BR -C
.I pubkey
.br
.B sign
.B -t

.SH DESCRIPTION
sign adds a cryptographic signature to a file. It can add a clearsign signature
(-c option), create a detached signature (-d option), or add a signature block
to a rpm package (-r option). If no mode is specified, sign does a rpm sign
if the file name ends in ".rpm", otherwise it does a clearsign. If no
file name is specified, sign reads from stdin and writes to stdout.

One can specify a specific user or hash method with the -u and -h option.
Currently sign understands sha1 and sha256 hashes.

sign does not create signatures by itself, it needs a running signing
daemon (called signd) to do the work. The host and port information is read
from the /etc/sign.conf file.

The -k option makes sign print the keyid instead of signing a file, the
-p option makes it print the public key.

New keys can be created by using the -g option. In that case, a file name
to store the private key needs to be provided with the -P option. This
private key can be used for signing by also using the -P option with the
other modes. The pubkey of the generated key is printed to stdout.

In case a SSL certification
is also needed (e.g. for linux kernel modules), the key can be converted to
a certificate by using the -C option.

The expire time of existing keys can be extended with the -x option.

.SH OTHER OPTIONS
In some cases it it useful to specify the signature time. This can be done
with the -T option.

The -S option specifies a checksum file, it makes sign append a line containing
the checksum of the signed rpms. This can be used to speed up repository
metadata generation.

.TP
.B \-t
Ping signd. If ping was successful, return exit code 0.
.TP
.B \-v
Verbose mode
.TP
.B \-T
.B <unixtime>
 Explicit sign time. If RPM mode used (\-r) also accepts string "buildtime"


.TP
.BR
.B Signature modes
.TP
 Requires private key (\-P) or user (\-u) with key in the signd root keyring.
.TP
.B \-c
.B <file>
 Create clearsign
.TP
.B \-r
.B <file>
 Sign RPM package
.TP
.B \-a
.B <file>
 Sign AppImage container
.TP
.B \-S
.B <path to checksumfile>
 Usable only with \-r option: writes checksums into the file

.TP
.B \-d
.B <file>
 Create detached sign
.TP
.B \-D
.B <file>
 Create RAW detached sign
.TP
.B \-C
.B <path to pubkey>
 Create SSL certificate
.TP
.B \-O
.B <path to pubkey>
 Create RAW SSL certificate


.B Key generation
.TP
.BR \-g
.B [\-P \<privkey\>\] <type> <expire> <name> <email>
 Generate new key-pair. Where:
 type: defined as {dsa,rsa}@{1024,2048}
 expire: integer, days before expire
 name: real name
 email: email
 Write pubkey and privke to stdout. If \-P option used,
 privkey will be written there and only pubkey goes to stdout.

.TP
.BR \-x
.B <expire> <pubkey>
 Extend key. Requires private key (\-P).


.B Query signd for key information / Common options
.TP
.BR \-k
Print the keyid of signd key-pair (root key or defined by \-u)
.TP
.BR \-p
Print pubkey of signd key-pair (root key or defined by \-u)
.TP
.BR \-u
Username, signd should already know about that user
.TP
.BR \-h
Hash: either sha1 or sha256


.SH SECURITY
sign needs to bind to a reserved port, it thus works only for user root
or needs to be installed suid-root. If the latter is the case, sign
grants the users specified in the "allowuser" lines of the configuration
the right to sign files.

sign and signd are supposed to run in isolated networks only.

.SH EXIT STATUS
sign returns 0 if everything worked, otherwise it returns 1 and
prints an error message to stderr.

.SH SEE ALSO
.BR signd (8),
.BR sign.conf (5)
